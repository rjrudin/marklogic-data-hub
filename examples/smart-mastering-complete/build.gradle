buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath "net.saliman:gradle-properties-plugin:1.5.1"
        if (project.hasProperty("testing")) {
            classpath "com.marklogic:ml-data-hub:5.5-SNAPSHOT"
        } else {
            classpath "com.marklogic:ml-data-hub:5.5.0"
        }
    }
}

apply plugin: "net.saliman.properties"
apply plugin: "com.marklogic.ml-data-hub"
apply plugin: "java"

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    mlcp
}

dependencies {
    implementation "com.marklogic:marklogic-data-hub:5.5.0"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "com.beust:jcommander:1.81"

    mlcp "com.marklogic:mlcp:10.0.6.1"
    mlcp files("lib")
}

task loadThesaurus(type: com.marklogic.gradle.task.MlcpTask) {
    classpath = configurations.mlcp
    username = project.findProperty("mlUsername")
    password = project.findProperty("mlPassword")
    command = "IMPORT"
    database = "data-hub-FINAL"
    input_file_path = "data/thesaurus"
    output_collections = "http://marklogic.com/xdmp/thesaurus,http://marklogic.com/xdmp/documents"
    output_permissions = "data-hub-common,read,data-hub-common,update"
    output_uri_replace = ".*data,''"
}
mlPostDeploy.dependsOn loadThesaurus

task ingestAndMaster(type: JavaExec) {
    main = "org.example.IngestAndMasterPersons"
    classpath = sourceSets.main.runtimeClasspath
    args = [
        "--host", mlHost,
        "--personCount", personCount,
        "--nameRandomness", nameRandomness,
        "--steps", steps,
        "--clearData", clearData
    ]
    maxHeapSize = project.property("maxHeapSize")
}
